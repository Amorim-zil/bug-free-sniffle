-- Carregar a biblioteca
local libraryCode = loadistring(game:HttpGet("https://raw.githubusercontent.com/Amorim-zil/bug-free-sniffle/main/KillAuraLibrary.lua")
local KillAuraLibrary = loadstring(libraryCode)()

-- Inicializar a biblioteca
KillAuraLibrary:init()


-- KillAuraLibrary.lua
local KillAuraLibrary = {}

-- Configurações iniciais
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local UIS = game:GetService("UserInputService")
local GuiService = game:GetService("GuiService")
local player = Players.LocalPlayer

local attackRadius = 50
local isKillAuraEnabled = false

-- Função para criar a UI
local function createUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "KillAuraUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 100, 0, 50)
    toggleButton.Position = UDim2.new(0, 10, 0, 10)
    toggleButton.Text = "Toggle Kill Aura"
    toggleButton.Parent = screenGui

    toggleButton.MouseButton1Click:Connect(function()
        isKillAuraEnabled = not isKillAuraEnabled
        toggleButton.Text = isKillAuraEnabled and "Kill Aura: ON" or "Kill Aura: OFF"
    end)
end

-- Função para lidar com monstros
local function handleMonster(monster)
    if monster:FindFirstChildOfClass("Humanoid") then
        local humanoid = monster:FindFirstChildOfClass("Humanoid")
        humanoid.Health = 0
    end
end

-- Função principal do Kill Aura
local function killAura()
    if not isKillAuraEnabled then return end

    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:FindFirstChildOfClass("HumanoidRootPart")

    if not humanoidRootPart then return end

    local monsters = Workspace:FindPartsInRegion3(
        Region3.new(
            humanoidRootPart.Position - Vector3.new(attackRadius, attackRadius, attackRadius),
            humanoidRootPart.Position + Vector3.new(attackRadius, attackRadius, attackRadius)
        ),
        nil,
        math.huge
    )

    for _, part in pairs(monsters) do
        local monster = part.Parent
        if monster and monster:IsA("Model") and monster ~= character then
            handleMonster(monster)
        end
    end
end

-- Inicialização
function KillAuraLibrary:init()
    createUI()
    while true do
        killAura()
        wait(1)
    end
end

return KillAuraLibrary
